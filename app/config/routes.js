const gestor = require('./gestor')

module.exports = app => {
    app.post('/signup', app.api.user.save)
    app.post('/signin', app.api.auth.signin)
    app.post('/validateToken', app.api.auth.validateToken)

    /**
     * Exibição ou captura de ativos do sistema
     */
    app.route('/asset')
        .all(app.config.passport.authenticate())
        .post(app.api.assets.getAsset)

    /**
     * Rota de validação genérica de documentos
     */
    app.route('/validator/:func/:tk')
        .get(app.api.validator.getByFunction)

    /**
     * Rotas de usuários
     */
    app.route('/request-password-reset').post(app.api.user.requestPasswordReset)
    app.route('/user-sms-unlock').post(app.api.user.smsToken)
    app.route('/password-reset/:token').put(app.api.user.passwordReset)
    app.route('/user-token/:token').get(app.api.user.getByToken)
    app.get('/user-unlock/:id/:token', app.api.user.unlock)
    app.post('/user-resend-unlock', app.api.user.mailyNew)
    app.get('/desk-users', app.api.user.getDeskUser)
    app.route('/users/f-a/:func')
        .all(app.config.passport.authenticate())
        .get(app.api.user.getByFunction)
    app.route('/users')
        .all(app.config.passport.authenticate())
        .post(gestor(app.api.user.save))
        .get(app.api.user.get)
    app.route('/users-cpf/:cpf')
        .all(app.config.passport.authenticate())
        .get(app.api.user.getByCpf)
    app.route('/users/:id')
        .all(app.config.passport.authenticate())
        .put(app.api.user.save)
        .get(app.api.user.getById)
        .delete(gestor(app.api.user.remove))
    app.route('/users/locate-servidor-on-client')
        .all(app.config.passport.authenticate())
        .post(app.api.user.locateServidorOnClient)

    /**
     * Rotas administrativas
     */
    app.route('/sis-events')
        .all(app.config.passport.authenticate())
        .post(app.api.sisEvents.createEventUpd)
        .get(app.api.sisEvents.get)
    app.route('/sis-events/:field')
        .all(app.config.passport.authenticate())
        .get(app.api.sisEvents.getByField)
    app.route('/params')
        .all(app.config.passport.authenticate())
        .post(app.api.params.save)
        .get(app.api.params.get)
    app.route('/params/:id')
        .all(app.config.passport.authenticate())
        .put(app.api.params.save)
        .get(app.api.params.getById)
        .delete(app.api.params.remove)
    app.route('/ponte-id').post(app.api.params.getPonteId)
    app.route('/siap-id').post(app.api.params.getSiapId)
    app.route('/esocial-id').post(app.api.params.getESocialId)
    app.route('/esocialjar-id').post(app.api.params.getESocialJarId)
    app.route('/mailer-cli')
        .all(app.config.passport.authenticate())
        .post(app.api.mailerCli.mailyCliSender)
    app.route('/mailer-noncli')
        // .all(app.config.passport.authenticate())
        .post(app.api.mailerCli.mailyCliSender)
    /**
    * Novas Rotas /////////////////////////////////////////////////////
    * 
    */
    app.route('/empresa')
        .all(app.config.passport.authenticate())
        .post(app.api.empresa.save)
        .get(app.api.empresa.get)
    app.route('/empresa/:id')
        .all(app.config.passport.authenticate())
        .put(app.api.empresa.save)
        .get(app.api.empresa.getById)
        .delete(app.api.empresa.remove)

    app.route('/es-params')
        .all(app.config.passport.authenticate())
        .post(app.api.esParams.save)
        .get(app.api.esParams.get)
    app.route('/es-params/:id')
        .all(app.config.passport.authenticate())
        .put(app.api.esParams.save)
        .get(app.api.esParams.getById)
        .delete(app.api.esParams.remove)

    app.route('/es-envios')
        .all(app.config.passport.authenticate())
        .post(app.api.esEnvios.save)
        .get(app.api.esEnvios.get)
    app.route('/es-envios/:id')
        .all(app.config.passport.authenticate())
        .put(app.api.esEnvios.save)
        .get(app.api.esEnvios.getById)
        .delete(app.api.esEnvios.remove)

    app.route('/es-rejeicoes')
        .all(app.config.passport.authenticate())
        .post(app.api.esRejeicoes.save)
        .get(app.api.esRejeicoes.get)
    app.route('/es-rejeicoes/:id')
        .all(app.config.passport.authenticate())
        .put(app.api.esRejeicoes.save)
        .get(app.api.esRejeicoes.getById)
        .delete(app.api.esRejeicoes.remove)

    app.route('/emp-resp')
        .all(app.config.passport.authenticate())
        .post(app.api.empResp.save)
        .get(app.api.empResp.get)
    app.route('/emp-resp/:id')
        .all(app.config.passport.authenticate())
        .put(app.api.empResp.save)
        .get(app.api.empResp.getById)
        .delete(app.api.empResp.remove)

    app.route('/emp-resp-contato')
        .all(app.config.passport.authenticate())
        .post(app.api.empRespContato.save)
        .get(app.api.empRespContato.get)
    app.route('/emp-resp-contato/:id')
        .all(app.config.passport.authenticate())
        .put(app.api.empRespContato.save)
        .get(app.api.empRespContato.getById)
        .delete(app.api.empRespContato.remove)

    app.route('/emp-ua')
        .all(app.config.passport.authenticate())
        .post(app.api.empUA.save)
        .get(app.api.empUA.get)
    app.route('/emp-ua/:id')
        .all(app.config.passport.authenticate())
        .put(app.api.empUA.save)
        .get(app.api.empUA.getById)
        .delete(app.api.empUA.remove)

    app.route('/aux-cargos')
        .all(app.config.passport.authenticate())
        .post(app.api.auxCargos.save)
        .get(app.api.auxCargos.get)
    app.route('/aux-cargos/:id')
        .all(app.config.passport.authenticate())
        .put(app.api.auxCargos.save)
        .get(app.api.auxCargos.getById)
        .delete(app.api.auxCargos.remove)

    app.route('/rubricas')
        .all(app.config.passport.authenticate())
        .post(app.api.rubricas.save)
        .get(app.api.rubricas.get)
    app.route('/rubricas/:id')
        .all(app.config.passport.authenticate())
        .put(app.api.rubricas.save)
        .get(app.api.rubricas.getById)
        .delete(app.api.rubricas.remove)

    app.route('/servidores')
        .all(app.config.passport.authenticate())
        .post(app.api.servidores.save)
        .get(app.api.servidores.get)
    app.route('/servidores/:id')
        .all(app.config.passport.authenticate())
        .put(app.api.servidores.save)
        .get(app.api.servidores.getById)
        .delete(app.api.servidores.remove)

    app.route('/serv-dependentes/:id_serv')
        .all(app.config.passport.authenticate())
        .post(app.api.servDependentes.save)
        .get(app.api.servDependentes.get)
    app.route('/serv-dependentes/:id_serv/:id')
        .all(app.config.passport.authenticate())
        .put(app.api.servDependentes.save)
        .get(app.api.servDependentes.getById)
        .delete(app.api.servDependentes.remove)

    app.route('/serv-vinculos/:id_serv')
        .all(app.config.passport.authenticate())
        .post(app.api.servVinculos.save)
        .get(app.api.servVinculos.get)
    app.route('/serv-vinculos/:id_serv/:id')
        .all(app.config.passport.authenticate())
        .put(app.api.servVinculos.save)
        .get(app.api.servVinculos.getById)
        .delete(app.api.servVinculos.remove)

    app.route('/local-params')
        .all(app.config.passport.authenticate())
        .post(app.api.localParams.save)
        .get(app.api.localParams.get)
    app.route('/local-params/:id')
        .all(app.config.passport.authenticate())
        .put(app.api.localParams.save)
        .get(app.api.localParams.getById)
        .delete(app.api.localParams.remove)

}